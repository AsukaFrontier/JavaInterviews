//------------------------------------------------------------------------//
final与static区别（作用于类的成员变量）：
static作用于成员变量用来表示只保存一份副本；
final用来保证变量不可变；

final修饰符：
修饰类：当用final修饰一个类时，表明这个类不能被继承。final类中的成员变量可以根据需要设置为final，final类中的所有成员方法都会被隐式地指定为final方法；
修饰方法：防止任何继承类修改方法；
修饰变量
  对于被final修饰的变量，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能被修改；
  如果是引用类型的变量，则初始化之后不能让该变量指向其他对象，但是该变量指向的对象是可变的；
//-------------------------------------------------------------------------//
HashMap与Hashtable区别
线程安全性：
  HashMap是非线程安全的，在多线程条件下容易导致死循环；
  java.util.Hashtable类是线程安全的；
  java.util.concurrent.ConcurrentHashMap是线程安全的；

Hashtable类
  Hashtable类提供的方法都有synchronized修饰符修饰；
  保证了线程安全性，但是降低了执行效率；
//----------------------------------------------------------------------------//
StringBuffer与StringBuilder区别：
可变性：
  String类使用字符数组保存字符串，该字符数组使用final修饰符，所以String对象是不可变的；
  StringBuffer类与StringBuilder都继承自AbstractStringBuilder类，两类的对象都是可变的；
线程安全性：
  String中的对象是不可变的，是线程安全的；
  StringBuffer对方法加了同步锁（synchronized），所以是线程安全的；
  StringBuilder是非线程安全的；
效率性：
  如果程序对于线程安全没有要求，则使用StringBuilder效率更高；
//----------------------------------------------------------------------------//